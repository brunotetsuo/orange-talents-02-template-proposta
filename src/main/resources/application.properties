## datasource
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.url=jdbc:h2:mem:proposta
#spring.datasource.username=root
#spring.datasource.password=
#
## jpa
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.h2.console.enabled=true

# data source
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://${db.url}:5432/banco_proposta?createDatabaseIfNotExist=true
spring.datasource.username=keycloak
spring.datasource.password=password
# jpa
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

db.url=${DB_URL:localhost}

# feign
analiseFeignClient.targetUrl=${URL_ANALISE:http://localhost:9999}
cartaoFeignClient.targetUrl=${URL_CARTAO:http://localhost:8888}

# actuator
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true
management.endpoints.web.exposure.exclude=env,beans
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:servico_de_proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

# scheduled
periocidade.adiciona-cartao=5000

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/teste}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/teste/protocol/openid-connect/certs}

# jaeger
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
opentracing.jaeger.service-name=${spring.application.name:proposta-desafio}
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}